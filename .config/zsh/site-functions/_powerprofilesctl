#compdef powerprofilesctl

# AUTOMATICALLY GENERATED by `shtab`


_shtab_powerprofilesctl_commands() {
  local _commands=(
    "configure-action:"
    "configure-battery-aware:"
    "get:"
    "launch:Launch the command while holding a power profile, either performance, or power-saver. By default, the profile hold is for the performance profile, but it might not be available on all systems. See the list command for a list of available profiles."
    "list:"
    "list-actions:"
    "list-holds:"
    "query-battery-aware:"
    "set:"
    "version:"
  )
  _describe 'powerprofilesctl commands' _commands
}

_shtab_powerprofilesctl_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  "(- : *)--print-completion[print shell completion script]:print_completion:(bash zsh tcsh)"
)

_shtab_powerprofilesctl_configure_action_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  "--enable[enable action]"
  "--disable[disable action]"
  ":action to change for configure-action:"
)

_shtab_powerprofilesctl_configure_battery_aware_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  "--enable[enable battery aware]"
  "--disable[disable battery aware]"
)

_shtab_powerprofilesctl_get_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
)

_shtab_powerprofilesctl_launch_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  {--profile,-p}"[Profile to use for launch command]:profile:"
  {--reason,-r}"[Reason to use for launch command]:reason:"
  {--appid,-i}"[AppId to use for launch command]:appid:"
  "(*)::Command to launch:"
)

_shtab_powerprofilesctl_list_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
)

_shtab_powerprofilesctl_list_actions_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
)

_shtab_powerprofilesctl_list_holds_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
)

_shtab_powerprofilesctl_query_battery_aware_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
)

_shtab_powerprofilesctl_set_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  ":Profile to use for set command:"
)

_shtab_powerprofilesctl_version_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
)


_shtab_powerprofilesctl() {
  local context state line curcontext="$curcontext" one_or_more='(-)*' remainder='(*)'

  if ((${_shtab_powerprofilesctl_options[(I)${(q)one_or_more}*]} + ${_shtab_powerprofilesctl_options[(I)${(q)remainder}*]} == 0)); then  # noqa: E501
    _shtab_powerprofilesctl_options+=(': :_shtab_powerprofilesctl_commands' '*::: :->powerprofilesctl')
  fi
  _arguments -C -s $_shtab_powerprofilesctl_options

  case $state in
    powerprofilesctl)
      words=($line[1] "${words[@]}")
      (( CURRENT += 1 ))
      curcontext="${curcontext%:*:*}:_shtab_powerprofilesctl-$line[1]:"
      case $line[1] in
        configure-action) _arguments -C -s $_shtab_powerprofilesctl_configure_action_options ;;
        configure-battery-aware) _arguments -C -s $_shtab_powerprofilesctl_configure_battery_aware_options ;;
        get) _arguments -C -s $_shtab_powerprofilesctl_get_options ;;
        launch) _arguments -C -s $_shtab_powerprofilesctl_launch_options ;;
        list) _arguments -C -s $_shtab_powerprofilesctl_list_options ;;
        list-actions) _arguments -C -s $_shtab_powerprofilesctl_list_actions_options ;;
        list-holds) _arguments -C -s $_shtab_powerprofilesctl_list_holds_options ;;
        query-battery-aware) _arguments -C -s $_shtab_powerprofilesctl_query_battery_aware_options ;;
        set) _arguments -C -s $_shtab_powerprofilesctl_set_options ;;
        version) _arguments -C -s $_shtab_powerprofilesctl_version_options ;;
      esac
  esac
}



typeset -A opt_args

if [[ $zsh_eval_context[-1] == eval ]]; then
  # eval/source/. command, register function for later
  compdef _shtab_powerprofilesctl -N powerprofilesctl
else
  # autoload from fpath, call function directly
  _shtab_powerprofilesctl "$@"
fi

