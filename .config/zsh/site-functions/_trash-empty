#compdef trash-empty

# AUTOMATICALLY GENERATED by `shtab`


_shtab_trash_empty_commands() {
  local _commands=(
    
  )
  _describe 'trash-empty commands' _commands
}

_shtab_trash_empty_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  "(- : *)--print-completion[print shell completion script]:print_completion:(bash zsh tcsh)"
  "--version[show program\'s version number and exit]"
  "*"{-v,--verbose}"[list files that will be deleted]"
  "*--trash-dir[specify the trash directory to use]:user_specified_trash_dirs:(\${\$(trash-list --trash-dirs)#parent_*})"
  "--all-users[empty all trashcan of all the users]"
  {-i,--interactive}"[ask before emptying trash directories]"
  "-f[don\'t ask before emptying trash directories]"
  "--dry-run[show which files would have been removed]"
  ":days:"
)


_shtab_trash_empty() {
  local context state line curcontext="$curcontext" one_or_more='(-)*' remainder='(*)'

  if ((${_shtab_trash_empty_options[(I)${(q)one_or_more}*]} + ${_shtab_trash_empty_options[(I)${(q)remainder}*]} == 0)); then  # noqa: E501
    _shtab_trash_empty_options+=(': :_shtab_trash_empty_commands' '*::: :->trash-empty')
  fi
  _arguments -C -s $_shtab_trash_empty_options

  case $state in
    trash-empty)
      words=($line[1] "${words[@]}")
      (( CURRENT += 1 ))
      curcontext="${curcontext%:*:*}:_shtab_trash_empty-$line[1]:"
      case $line[1] in
        
      esac
  esac
}

# Custom Preamble

# https://github.com/zsh-users/zsh/blob/19390a1ba8dc983b0a1379058e90cd51ce156815/Completion/Unix/Command/_rm#L72-L74
_trash_files() {
  (( CURRENT > 0 )) && line[CURRENT]=()
  line=( ${line//(#m)[\[\]()\\*?#<>~\^\|]/\\$MATCH} )
  _files -F line
}

# End Custom Preamble


typeset -A opt_args

if [[ $zsh_eval_context[-1] == eval ]]; then
  # eval/source/. command, register function for later
  compdef _shtab_trash_empty -N trash-empty
else
  # autoload from fpath, call function directly
  _shtab_trash_empty "$@"
fi

